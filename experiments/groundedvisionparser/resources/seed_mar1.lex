// SENTENCE 1 --- FIRST PARSE
another :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
watches :- (S\NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2) ($0 $3 $4) (look_at:<e,<e,t>> $2 $3)))))))
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
with :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (with:<e,<e,t>> $2 $3))))))
bag :- N : (bag:<e,t>)
//SENTENCE 2 --- FIRST PARSE
there is :- S/NP : (lambda $0:<e,<e,t>> (lambda $1:e (lambda $2:e ($0 $1 $2))))
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (green:<e,t> $1))))
backpack :- N : (bag:<e,t>)
sitting :- NP\NP : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (sit:<e,t> $1))))
on :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (on:<e,<e,t>> $2 $3))))))
yellow :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (yellow:<e,t> $1))))
chair :- N : (chair:<e,t>)
// SENTENCE 3 --- FIRST PARSE
both :- NP/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (two:<e,t> $1))))
guys :- N : (people:<e,t>)
set down :- (S\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (put_down:<e,<e,t>> $2 $3))))))
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
objects :- N : (objects:<e,t>)
at the same time :- NP\NP : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
//SENTENCE 4 --- FIRST PARSE
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) 
man :- N : (person:<e,t>)
man :- NP : (person:<e,t>)
is :- (S\NP)/(S\NP) : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $2 $3) ($1 $2))))))
walking :- S\NP : (lambda $0:e (walk:<e,t> $0))
away from :- ((S\NP)\(S\NP))/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (from:<e,<e,t>> $2 $3))))))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (green:<e,t> $1))))
chair :- N : (chair:<e,t>)
// SENTENCE 5 --- FIRST PARSE
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (green:<e,t> $1) ($0 $1))))
backpack :- N : (bag:<e,t>)
is :- ((S\NP)/NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:<e,t> (lambda $3:e (lambda $4:e (lambda $5:e (and:<t*,t> ($0 $3 $4) ($2 $3) ($1 $3 $5))))))))
near :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (near:<e,<e,t>> $1 $2)))))
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
stairway :- N : (stairs:<e,t>)
on :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (on:<e,<e,t>> $1 $2))))
floor :- NP : (floor:<e,t>)
// SENTENCE 6 --- FIRST PARSE
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
woman :- N : (person:<e,t>)
cautiously :- (S\NP)/(S\NP) : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($1 $2) ($0 $2 $3))))))
slowly :- (S\NP)/(S\NP) : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($1 $2) ($0 $2 $3))))))
grabs :- (S\NP)/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (pick_up:<e,<e,t>> $1 $2)))))
an :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
apple :- N : (apple:<e,t>)
off :- (S\S)/NP : (lambda $0:<e,t> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2 $3) ($0 $4) (from:<e,<e,t>> $3 $4)))))))
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
table :- N : (table:<e,t>)
//SENTENCE 7 --- FIRST PARSE
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
guy :- N : (person:<e,t>)
in :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($1 $2) ($0 $3) (in:<e,<e,t>> $2 $3))))))
plaid :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (plaid:<e,t> $1) ($0 $1))))
shirt :- N : (shirt:<e,t>)
walks :- (S\NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2 $3) ($0 $2 $4) (walk:<e,t> $2)))))))
toward :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (toward:<e,<e,t>> $1 $2)))))
tan :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (tan:<e,t> $1) ($0 $1))))
chair :- N : (chair:<e,t>)
// SENTENCE 8 --- FIRST PARSE
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) 
woman :- N : (person:<e,t>)
is :- (S\NP)/(S\NP) : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $2 $3) ($1 $2))))))
standing :- S\NP : (lambda $0:e (stand:<e,t> $0))
by :- ((S\NP)\(S\NP))/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (near:<e,<e,t>> $2 $3))))))
table :- N : (table:<e,t>)
// SENTENCE 9 --- FIRST PARSE
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
lifting :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (pick_up:<e,<e,t>> $2 $3))))))
chair :- N : (chair:<e,t>)
is :- (S\NP)/(S\NP) : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2 $3) ($0 $2 $4)))))))
wearing :- (S\NP)/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (wear:<e,<e,t>> $1 $2)))))
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
plaid :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (plaid:<e,t> $1) ($0 $1))))
shirt :- N : (shirt:<e,t>)
// SENTENCE 10 --- FIRST PARSE
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
walks :- (S\NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2) ($0 $3 $4) (walk:<e,t> $2)))))))
yellow :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (yellow:<e,t> $1) ($0 $1))))
chair :- N : (chair:<e,t>)
over to :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (to:<e,<e,t>> $2 $3))))))
another :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
// SENTENCE 11 --- FIRST PARSE
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
in :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (in:<e,<e,t>> $2 $3))))))
blue :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (blue:<e,t> $1) ($0 $1))))
jacket :- N : (jacket:<e,t>)
is :- (S\NP)/(S\NP) : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2 $3) ($0 $2 $4))))))
staring at :- (S\NP)/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (look_at:<e,<e,t>> $1 $2)))))
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (green:<e,t> $1))))
office :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (office:<e,t> $1))))
chair :- N : (chair:<e,t>)
// SENTENCE 12 --- FIRST PARSE
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
guy :- N : (person:<e,t>)
in :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (in:<e,<e,t>> $2 $3))))))
plaid :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (plaid:<e,t> $1) ($0 $1))))
shirt :- N : (shirt:<e,t>)
picks up :- (S\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2 $3) ($0 $4) (pick_up:<e,<e,t>> $2 $4)))))))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (green:<e,t> $1))))
backpack :- N : (bag:<e,t>)
// SENTENCE 13 --- FIRST PARSE
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
chair :- N : (chair:<e,t>)
is :- (S\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (and:<t*,t> ($0 $2) ($1 $2)))))
green :- NP : (green:<e,t>)
// SENTENCE 14 --- FIRST PARSE
the:- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
in :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (in:<e,<e,t>> $2 $3))))))
red :- NP : (lambda $0:e (and:<t*,t> (red:<e,t> $0) (shirt:<e,t> $0)))
is :- (S\NP)/(S\NP) : (lambda $0:<e,t> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $2) ($1 $2 $3))))))
standing :- S\NP : (lambda $0:e (stand:<e,t> $0))
still :- (S\NP)\(S\NP) : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
// SENTENCE 15 --- FIRST PARSE
there is :- (S/NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($0 $2 $3) ($1 $2 $4)))))))
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
in the middle of :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (in_middle_of:<e,<e,t>> $2 $3))))))
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
lobby :- N : (lobby:<e,t>)
picking up :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (pick_up:<e,<e,t>> $1 $2)))))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (green:<e,t> $1))))
backpack :- N : (bag:<e,t>)
// SENTENCE 16 --- FIRST PARSE
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1))) 
man :- N : (person:<e,t>)
in :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($1 $2) ($0 $3) (in:<e,<e,t>> $2 $3))))))
plaid :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (plaid:<e,t> $1) ($0 $1))))
shirt :- N : (shirt:<e,t>)
is :- ((S\NP)/NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:<e,<e,t>> (lambda $3:e (lambda $4:e (lambda $5:e (lambda $6:e (and:<t*,t> ($2 $3 $4) ($0 $3 $5) ($1 $5 $6)))))))))
sliding :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (move:<e,<e,t>> $1 $2)))))
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (green:<e,t> $1))))
chair :- N : (chair:<e,t>)
to :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $1) (to:<e,<e,t>> $3 $1))))))
his :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
right :- N : (right:<e,t>)
// SENTENCE 17 --- FIRST PARSE
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
apple :- N : (apple:<e,t>)
is :- (S\NP)/(S\NP) : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $2 $3) ($1 $2))))))
placed :- S\NP : (lambda $0:e (lambda $1:e (put_down:<e,t> $0)))
on :- ((S\NP)\(S\NP))/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($0 $3) ($1 $2) (near:<e,<e,t>> $2 $3)))))))
table :- N : (table:<e,t>)
// SENTENCE 19 --- FIRST PARSE
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
woman :- N : (person:<e,t>)
gives :- ((S\NP)/NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:<e,t> (lambda $3:e (lambda $4:e (lambda $5:e (and:<t*,t> ($0 $4) ($1 $5) ($2 $3) (give:<e,<e,<e,t>>> $3 $4 $5))))))))
man :- N : (person:<e,t>)
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
pear :- N : (pear:<e,t>)
// SENTENCE 20 --- FIRST PARSE
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
in :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (in:<e,<e,t>> $2 $3))))))
grey :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (grey:<e,t> $1) ($0 $1))))
shirt :- N : (shirt:<e,t>)
walks :- ((S\NP)/NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:<e,<e,t>> (lambda $3:e (lambda $4:e (lambda $5:e (lambda $6:e (and:<t*,t> ($0 $3 $5) ($1 $5 $6) ($2 $3 $4) (walk:<e,t> $3)))))))))
away from :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (from:<e,<e,t>> $1 $2)))))
dog :- NP :(dog:<e,t>)
holding :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $1) (hold:<e,<e,t>> $3 $1))))))
yellow :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> (yellow:<e,t> $1) ($0 $1))))
backpack :- NP : (bag:<e,t>)

  
2 :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (two:<e,t> $1))))
  //dark haired :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (dark_haired:<e,t> $1))))
		      //light haired :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (light_haired:<e,t> $1))))
  //piece of fruit :- N : (fruit:<e,t>)

		      //there are :- S/NP : (lambda $0:<e,<e,t>> (lambda $1:e (lambda $2:e ($0 $1 $2))))
		      //there are :- S/NP : (lambda $0:<e,t> (lambda $1:e ($0 $1)))

  //place :- (S\NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($0 $2 $3) ($1 $4) (put_down:<e,<e,t>> $2 $4)))))))
  //in the air :- S\S : (lambda $0:<e,<e,t>> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $1 $2)))))
  
next to :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ( $0 $2) ($1 $3) (next_to:<e,<e,t>> $3 $2))))))
in front of :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (in_front_of:<e,<e,t>> $2 $3))))))
on top of :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (on_top_of:<e,<e,t>> $2 $3))))))

  
reaches for :- (S\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2 $3) ($0 $4) (pick_up:<e,<e,t>> $2 $4)))))))

		      // for things like 'other'
		      //other :- N/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
