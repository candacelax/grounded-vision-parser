//there is :- S/NP : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
//there is :- S/NP : (lambda $0:<e,<e,t>> (lambda $1:e (lambda $2:e ($0 $1 $2))))
//there is :- (S/NP)/NP : (lambda $0:<e,t> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (and:<t*,t> ($1 $2 $3) ($0 $2))))))
//there is :- (S/NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $2 $3) ($1 $2))))))
there is :- (S/NP)/NP : (lambda $0:<e,<e,t>> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($0 $2 $3) ($1 $2 $4)))))))
a :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
man :- N : (person:<e,t>)
in the middle of :- (NP\NP)/NP : (lambda $0:<e,t> (lambda $1:<e,t> (lambda $2:e (lambda $3:e (and:<t*,t> ($0 $3) ($1 $2) (in_middle_of:<e,<e,t>> $2 $3))))))
the :- NP/N : (lambda $0:<e,t> (lambda $1:e ($0 $1)))
lobby :- N : (lobby:<e,t>)
	  //picking up :- NP : (lambda $0:e (pick_up:<e,t> $0))
picking up :- NP/NP : (lambda $0:<e,t> (lambda $1:e (lambda $2:e (and:<t*,t> ($0 $2) (pick_up:<e,<e,t>> $1 $2))))) 
//picking up :- (S\S)/NP : (lambda $0:<e,t> (lambda $1:<e,<e,t>> (lambda $2:e (lambda $3:e (lambda $4:e (and:<t*,t> ($1 $2 $3) ($0 $4) (pick_up:<e,<e,t>> $2 $4)))))))
green :- N/N : (lambda $0:<e,t> (lambda $1:e (and:<t*,t> ($0 $1) (green:<e,t> $1))))
backpack :- N : (bag:<e,t>)
